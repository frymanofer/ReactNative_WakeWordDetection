// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target x86_64-apple-ios13.4-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name KeyWordDetection
import AVFoundation
import CommonCrypto
import Foundation
@_exported import KeyWordDetection
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import ios_voice_processor
import os.log
import onnxruntime_objc
import os
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class GlobalVariables : ObjectiveC.NSObject {
  @objc public static let shared: KeyWordDetection.GlobalVariables
  @objc public var keyWordsDetectionInstance: KeyWordDetection.KeyWordsDetection?
  @objc public var modelName: Swift.String?
  @objc public var threshold: Swift.Float
  @objc public var bufferCnt: Swift.Int
  @objc deinit
}
@objc public protocol KeywordDetectionRNDelegate {
  @objc func KeywordDetectionDidDetectEvent(_ eventInfo: [Swift.String : Any])
}
@objc public class KeyWordsDetection : ObjectiveC.NSObject {
  @objc weak public var delegate: (any KeyWordDetection.KeywordDetectionRNDelegate)?
  @objc public init(modelPath: Swift.String, threshold: Swift.Float, bufferCnt: Swift.Int) throws
  @objc public func replaceKeywordDetectionModel(modelPath: Swift.String, threshold: Swift.Float, bufferCnt: Swift.Int) throws
  @objc public func getKeywordDetectionModel() -> Swift.String
  @objc public func getRecordingWav() -> Swift.String
  @objc public func setKeywordDetectionLicense(licenseKey: Swift.String) -> Swift.Bool
  @objc public func setLicense(licenseKey: Swift.String) -> Swift.Bool
  @objc public func callBack(frame: [Swift.Int16])
  @objc public func startListening() throws
  @objc public func stopListening()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class LicenseManager : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc deinit
}
