plugins {
  id "com.android.application"
  id "org.jetbrains.kotlin.android"
  id "com.facebook.react"     // resolved via includeBuild in settings.gradle
}

react {
  autolinkLibrariesWithApp()
}

android {
  namespace "com.exampleapp"                 // <-- keep your package
  ndkVersion rootProject.ext.ndkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion
  compileSdkVersion rootProject.ext.compileSdkVersion  // <— use compileSdkVersion (AGP accepts both)

  defaultConfig {
    applicationId "com.exampleapp"           // <-- keep your package
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode 1
    versionName "1.0"
  }

  signingConfigs {
    debug {
      storeFile file('debug.keystore')
      storePassword 'android'
      keyAlias 'androiddebugkey'
      keyPassword 'android'
    }
  }

  buildTypes {
    debug {
      signingConfig signingConfigs.debug
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      buildConfigField "boolean", "LOGGING_ENABLED", "false"
    }
    release {
      signingConfig signingConfigs.debug
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      buildConfigField "boolean", "LOGGING_ENABLED", "false"
    }
  }

  // AGP 8.x + Gradle 8.x → Java 17 toolchain
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_17
    targetCompatibility JavaVersion.VERSION_17
  }
  kotlinOptions { jvmTarget = "17" }

  packagingOptions {
    resources { excludes += ["META-INF/**"] }
  }
}

repositories {
  mavenLocal()
}

dependencies {
  implementation("com.facebook.react:react-android")
  if (hermesEnabled.toBoolean()) {
    implementation("com.facebook.react:hermes-android")
  } else {
    implementation 'org.webkit:android-jsc:+'
  }
}
